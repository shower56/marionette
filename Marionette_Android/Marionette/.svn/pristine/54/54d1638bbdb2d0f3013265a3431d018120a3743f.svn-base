package org.probit.marionette.service;

import org.probit.marionette.MainActivity;
import org.probit.marionette.R;
import org.probit.marionette.thread.BluetoothThread;

import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.support.v4.app.NotificationCompat;
import android.util.Log;

public class MarionetteService extends Service {
	
	private String TAG = getClass().getSimpleName();
	NotificationManager manager;
	
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}

	// 제일 중요한 메서드! (서비스 작동내용을 넣어준다.)
	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.d(TAG, "onStartCommand");

		if (manager == null) {
			manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);

			NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplicationContext());
			builder.setSmallIcon(R.drawable.ic_launcher).setContentTitle("MarionetteService")
					.setContentText("MarionetteService is on").setOngoing(true);

			Intent i = new Intent(getApplicationContext(), MainActivity.class);
			
			i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK 
	                | Intent.FLAG_ACTIVITY_CLEAR_TOP 
	                | Intent.FLAG_ACTIVITY_SINGLE_TOP);
			
			PendingIntent pIntent = PendingIntent.getActivity(getApplicationContext(), 0, i,
					PendingIntent.FLAG_UPDATE_CURRENT);
			
			builder.setContentIntent(pIntent);
			manager.notify(1, builder.build());
			
			
			// 시리얼 통신 스레드 동작
			
			
		} else {
			Log.d(TAG, "이미 이씀");
		}

		return START_STICKY_COMPATIBILITY;
	}

	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		Log.d(TAG, "onDestroy");
		
		if(manager != null)
			manager.cancel(1);
	}
	
}
